/*
 Originally taken from https://github.com/hzdg/react-google-analytics/blob/cba5239561220a3762885d28b04619cbf6cf65f7/src/index.coffee
 JavaScript version was generated by coffee-script 1.9.2 (http://js2.coffee/)
 */
import React from 'react';

const slice = Array.prototype.slice;
let name, scriptIsAdded;

const ga = function () {
  const args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  return typeof window !== "undefined" && window !== null ? window[window.GoogleAnalyticsObject].apply(window, args) : void 0;
};

if (typeof window !== "undefined" && window !== null) {
  if (window.GoogleAnalyticsObject == null) {
    window.GoogleAnalyticsObject = 'ga';
  }
}

if (typeof window !== "undefined" && window !== null) {
  if (window.ga == null) {
    window.ga = ga;
  }
}

if (typeof window !== "undefined" && window !== null) {
  if (window[name = window.GoogleAnalyticsObject] == null) {
    window[name] = function () {
      const args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      const api = window[window.GoogleAnalyticsObject];
      (api.q || (api.q = [])).push(args);
    };
  }
}

scriptIsAdded = false;

ga.Initializer = class GAInitializer extends React.PureComponent {
  static displayName = 'GAInitializer';

  componentDidMount() {
    window[window.GoogleAnalyticsObject].l = new Date().getTime();
    if (!scriptIsAdded) {
      return this.addScript();
    }

    return undefined;
  }

  addScript = () => {
    scriptIsAdded = true;
    const el = document.createElement('script');
    el.type = 'text/javascript';
    el.async = true;
    el.src = '//www.google-analytics.com/analytics.js';
    const s = document.getElementsByTagName('script')[0];
    return s.parentNode.insertBefore(el, s);
  };

  render() {
    return false;
  }
};

export default ga;
